# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-test

# Trigger the workflow when:
on:
  # A push occurs to one of the matched branches.
  push:
    branches:
      - main
      - stable/*
  # Or when a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches:
      - main
      - stable/*

jobs:

  test-rust:
    # NOTE: This name appears in GitHub's Checks API.
    name: test-rust
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt # rustfmt is required for macros tests.

      - name: Unit tests with coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.18.0-alpha3'
          args: '--avoid-cfg-tarpaulin -- --test-threads 1'
        env:
          # Required as tarpaulin doesn't honor .cargo/config.
          RUSTFLAGS: -C target-feature=+aes,+ssse3

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2.0.2

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2.2.4
        with:
          name: code-coverage-report
          path: cobertura.xml

  test-rust-sgx:
    # NOTE: This name appears in GitHub's Checks API.
    name: test-rust-sgx
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt # rustfmt is required for macros tests.
          target: x86_64-fortanix-unknown-sgx

      - name: Build for SGX
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target x86_64-fortanix-unknown-sgx

  test-go:
    # NOTE: This name appears in GitHub's Checks API.
    name: test-go
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.x"

      - name: Unit tests with coverage
        working-directory: client-sdk/go
        run: go test -race -coverprofile=coverage.txt -covermode=atomic -v ./...

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2.0.2
        with:
          directory: client-sdk/go

  typecheck:
    # NOTE: This name appears in GitHub's Checks API.
    name: typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js LTS
        uses: actions/setup-node@v2.3.1
        with:
          node-version: "14.x"

      - name: Set up npm
        run: npm install npm@7 -g

      - name: Install dependencies and build
        working-directory: client-sdk/ts-web
        run: npm ci --foreground-scripts

      - name: Check ts-web/core playground
        working-directory: client-sdk/ts-web/core
        run: npm run-script check-playground

      - name: Check ts-web/signer-ledger playground
        working-directory: client-sdk/ts-web/signer-ledger
        run: npm run-script check-playground

      - name: Check ts-web/rt playground
        working-directory: client-sdk/ts-web/rt
        run: npm run-script check-playground

      - name: Check ts-web/ext-utils sample-page
        working-directory: client-sdk/ts-web/ext-utils
        run: npm run-script check-sample-page

      - name: Check ts-web/ext-utils sample-ext
        working-directory: client-sdk/ts-web/ext-utils
        run: npm run-script check-sample-ext

  e2e-ts-web-core:
    # NOTE: This name appears in GitHub's Checks API.
    name: e2e-ts-web-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js LTS
        uses: actions/setup-node@v2.3.1
        with:
          node-version: "14.x"

      - name: Set up npm
        run: npm install npm@7 -g

      - name: Install dependencies and build
        working-directory: client-sdk/ts-web
        run: npm ci --foreground-scripts

      - name: 'dev-server: Start'
        working-directory: client-sdk/ts-web/core
        run: npm run-script playground &

      - name: 'proxy: Install Envoy'
        # https://github.com/tetratelabs/archive-envoy
        run: |
          curl -sL 'https://github.com/tetratelabs/archive-envoy/releases/download/v1.18.3/envoy-v1.18.3-linux-amd64.tar.xz' | sudo tar -xJC /opt
          sudo ln -s /opt/envoy-v1.18.3-linux-amd64/bin/envoy /usr/local/bin

      - name: 'proxy: Start'
        working-directory: client-sdk/ts-web/core/playground
        run: ./sample-run-envoy.sh &

      - name: 'testnet: Download artifacts'
        working-directory: tests
        run: ./download-artifacts.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'testnet: Start'
        working-directory: client-sdk/ts-web/core/playground
        run: ./sample-run-network.sh &

      - name: 'testnet: Wait for node socket'
        run: |
          while [ ! -e /tmp/oasis-net-runner-sdk-core/net-runner/network/client-0/internal.sock ]; do
            sleep 1
          done

      - name: Cypress run
        working-directory: client-sdk/ts-web/core
        run: npx --package cypress -c 'cypress run'

      - name: Upload screenshot
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: e2e-ts-web-core-screenshots
          path: client-sdk/ts-web/core/cypress/screenshots

  e2e-ts-web-ext-utils:
    # NOTE: This name appears in GitHub's Checks API.
    name: e2e-ts-web-ext-utils
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js LTS
        uses: actions/setup-node@v2.3.1
        with:
          node-version: "14.x"

      - name: Set up npm
        run: npm install npm@7 -g

      - name: Install dependencies and build
        working-directory: client-sdk/ts-web
        run: npm ci --foreground-scripts

      - name: 'dev-server sample-page: Start'
        working-directory: client-sdk/ts-web/ext-utils
        run: npm run-script sample-page &

      - name: 'dev-server fake-sample-ext: Start'
        working-directory: client-sdk/ts-web/ext-utils
        run: npm run-script fake-sample-ext &

      - name: Cypress run
        working-directory: client-sdk/ts-web/ext-utils
        run: npx --package cypress -c 'cypress run'

      - name: Upload screenshot
        if: failure()
        uses: actions/upload-artifact@v2.2.3
        with:
          name: e2e-ts-web-ext-utils-screenshots
          path: client-sdk/ts-web/ext-utils/cypress/screenshots

  e2e-ts-web-rt:
    # NOTE: This name appears in GitHub's Checks API.
    name: e2e-ts-web-rt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js LTS
        uses: actions/setup-node@v2.3.1
        with:
          node-version: "14.x"

      - name: Set up npm
        run: npm install npm@7 -g

      - name: Install dependencies and build
        working-directory: client-sdk/ts-web
        run: npm ci --foreground-scripts

      - name: 'dev-server: Start'
        working-directory: client-sdk/ts-web/rt
        run: npm run-script playground &

      - name: 'proxy: Install Envoy'
        # https://github.com/tetratelabs/archive-envoy
        run: |
          curl -sL 'https://github.com/tetratelabs/archive-envoy/releases/download/v1.18.3/envoy-v1.18.3-linux-amd64.tar.xz' | sudo tar -xJC /opt
          sudo ln -s /opt/envoy-v1.18.3-linux-amd64/bin/envoy /usr/local/bin

      - name: 'proxy: Start'
        working-directory: client-sdk/ts-web/rt/playground
        run: ./sample-run-envoy.sh &

      - name: 'testnet: Install system packages'
        run: sudo apt-get -y install bubblewrap

      - name: 'testnet: Download artifacts'
        working-directory: tests
        run: ./download-artifacts.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'testnet: Build runtime'
        working-directory: client-sdk/ts-web/rt/playground
        run: ./build-runtime.sh

      - name: 'testnet: Start'
        working-directory: client-sdk/ts-web/rt/playground
        run: ./sample-run-network.sh &

      - name: 'testnet: Wait for node socket'
        run: |
          while [ ! -e /tmp/oasis-net-runner-sdk-rt/net-runner/network/client-0/internal.sock ]; do
            sleep 1
          done

      - name: Cypress run
        working-directory: client-sdk/ts-web/rt
        run: npx --package cypress -c 'cypress run'

      - name: Upload screenshot
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: e2e-ts-web-rt-screenshots
          path: client-sdk/ts-web/rt/cypress/screenshots

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: e2e-ts-web-rt-logs
          path: |
            /tmp/oasis-net-runner-sdk-rt/**/*.log

  e2e-rt:
    # NOTE: This name appears in GitHub's Checks API.
    name: e2e-rt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1

      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.x"

      - name: Install Oasis dependencies
        run: |
          sudo apt-get update
          sudo apt-get install bubblewrap build-essential libseccomp-dev libssl-dev protobuf-compiler

      - name: Download artifacts
        working-directory: tests
        run: ./download-artifacts.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run end-to-end tests
        run: ./tests/run-e2e.sh

  jest-ts-web-core:
    name: jest-ts-web-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js LTS
        uses: actions/setup-node@v2.3.1
        with:
          node-version: "14.x"

      - name: Set up npm
        run: npm install npm@7 -g

      - name: Install dependencies and build
        working-directory: client-sdk/ts-web
        run: npm ci --foreground-scripts

      - name: Run tests
        working-directory: client-sdk/ts-web/core
        run: npm test

  benchmark-rt:
    # NOTE: This name appears in GitHub's Checks API.
    name: benchmark-rt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1

      - name: Set up Go 1.16
        uses: actions/setup-go@v2.1.3
        with:
          go-version: "1.16.x"

      - name: Install Oasis dependencies
        run: |
          sudo apt-get update
          sudo apt-get install bubblewrap build-essential libseccomp-dev libssl-dev protobuf-compiler

      - name: Run end-to-end benchmarks
        working-directory: tests/benchmark
        run: ./run-benchmarks.sh
