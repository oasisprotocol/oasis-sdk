# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: ci-lint

# Trigger the workflow when:
on:
  # A push occurs to one of the matched branches.
  push:
    branches:
      - main
      - stable/*
  # Or when a pull request event occurs for a pull request against one of the
  # matched branches.
  pull_request:
    branches:
      - main
      - stable/*

# Cancel in-progress jobs on same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  lint-rust:
    # NOTE: This name appears in GitHub's Checks API.
    name: lint-rust
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy

      - name: Lint Rust code
        uses: ./.github/actions/lint-rust
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Hello contract code
        uses: ./.github/actions/lint-rust
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          manfiest_path: tests/contracts/hello/Cargo.toml

      - name: Lint OAS-20 contract code
        uses: ./.github/actions/lint-rust
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          manfiest_path: contract-sdk/specs/oas20/Cargo.toml

  lint-go-client-sdk:
    name: lint-go-client-sdk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint Go client-sdk
        uses: golangci/golangci-lint-action@v2
        with:
          # NOTE: The version must be specified without the patch version.
          version: v1.40
          working-directory: client-sdk/go

  lint-go-tests-e2e:
    name: lint-go-tests-e2e
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install libseccomp-dev
        run: |
          sudo apt-get update
          sudo apt-get install libseccomp-dev

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-unknown # For building test contracts.

      - name: Build test contracts
        working-directory: tests/contracts/hello
        run: |
          cargo build --target wasm32-unknown-unknown --release
          mv target/wasm32-unknown-unknown/release/hello.wasm ../../e2e/contracts/hello.wasm

      - name: Build oas20 contract
        working-directory: contract-sdk/specs/oas20
        run: |
          cargo build --target wasm32-unknown-unknown --release
          mv target/wasm32-unknown-unknown/release/oas20.wasm ../../../tests/e2e/contracts/oas20.wasm

      - name: Lint E2E tests
        uses: golangci/golangci-lint-action@v2
        with:
          # NOTE: The version must be specified without the patch version.
          version: v1.40
          working-directory: tests/e2e

  lint-go-reflect:
    name: lint-go-reflect
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint reflect-go
        uses: golangci/golangci-lint-action@v2
        with:
          # NOTE: The version must be specified without the patch version.
          version: v1.40
          working-directory: client-sdk/ts-web/core/reflect-go

  lint-go-cli:
    name: lint-go-cli
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint Go cli
        uses: golangci/golangci-lint-action@v2
        with:
          # NOTE: The version must be specified without the patch version.
          version: v1.40
          working-directory: cli

  lint-ts-web:
    name: lint-ts-web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js LTS
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "14.x"
          cache: npm
          cache-dependency-path: 'client-sdk/ts-web/package-lock.json'

      - name: Set up npm
        run: npm install npm@7 -g

      - name: Install dependencies and build
        working-directory: client-sdk/ts-web
        run: npm ci --foreground-scripts

      - name: Lint ts-web/core
        working-directory: client-sdk/ts-web/core
        run: npm run-script lint

      - name: Lint ts-web/ext-utils
        working-directory: client-sdk/ts-web/ext-utils
        run: npm run-script lint

      - name: Lint ts-web/signer-ledger
        working-directory: client-sdk/ts-web/signer-ledger
        run: npm run-script lint

      - name: Lint ts-web/rt
        working-directory: client-sdk/ts-web/rt
        run: npm run-script lint

  lint-markdown:
    name: lint-markdown
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint markdown
        uses: nosborn/github-action-markdown-cli@v3.0.1
        with:
          files: docs
