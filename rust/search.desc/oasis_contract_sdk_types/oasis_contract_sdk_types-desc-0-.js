searchState.loadedDescShard("oasis_contract_sdk_types", 0, "A collection of common types used by the Oasis Contract …\nFormat used for encoding the call (and output) information.\nUnique stored code identifier.\nEncrypted call data using X25519 for key exchange and …\nExecution context.\nResult of a successful contract execution.\nContract execution result.\nUnique deployed code instance identifier.\nPlain text call data.\nA minimal representation of an Oasis Runtime SDK address.\nConvert identifier to u64.\nConvert identifier to u64.\nTransaction’s call format.\nCaller address.\nCryptography-related types.\nRaw data returned from the contract.\nTokens deposited by the caller.\nEnvironment query-related types.\nEvents.\nEvents emitted from the contract.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the next identifier in sequence.\nReturn the next identifier in sequence.\nContract instance address.\nContract instance identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMessages that can be emitted by contracts.\nMessages emitted from the contract.\nA collection of types for easier calling into existing SDK …\nRead-only flag.\nStorage-related types.\nTesting helpers.\nConvert identifier to storage key representation.\nConvert identifier to storage key representation.\nToken types.\nAn account address.\nError.\nSize of an address in bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTries to create a new address from Bech32-encoded string.\nTries to create a new address from raw bytes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts an address to Bech32 representation.\nSignature kind.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAccounts queries.\nAccounts queries.\nAccounts API queries.\nAccounts API responses.\nQuery an account’s balance.\nAn account’s balance of the given denomination.\nInformation about the current runtime block.\nInformation about the current runtime block.\nIndication of a failing request.\nA query request.\nA query response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn event emitted from the contract.\nUnique code representing the event for the given module.\nArbitrary data associated with the event.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOptional module name.\nCalls an arbitrary runtime method handler in a child …\nReply from a call message.\nCall result.\nMessages can be emitted by contracts and are processed …\nSpecifies when the caller (smart contract) wants to be …\nReplies to delivered messages.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether the call result indicates a successful …\nInstantiate call result.\nReturns the argument unchanged.\nAssigned instance identifier.\nCalls <code>U::from(self)</code>.\nKind of the store to use.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrefix that should be used for the underlying store.\nToken amount of given denomination in base units.\nName/type of the token.\nMaximum length of a denomination.\nDenomination in native token.\nToken amount in base units.\nMutable token amount in base units.\nDenomination of the token amount.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRaw representation of a denomination.\nWhether the denomination represents the native token.\nCreates a new token amount with native denomination.\nCreates a new token amount of the given denomination.")